{
  "version": 3,
  "sources": ["../../.pnpm/svelte-confetti@2.3.2_svelte@5.37.0/node_modules/svelte-confetti/dist/Confetti.svelte", "../../.pnpm/svelte-confetti@2.3.2_svelte@5.37.0/node_modules/svelte-confetti/dist/index.js"],
  "sourcesContent": ["<script>\r\n  import { onMount } from \"svelte\"\r\n\r\n  /**\r\n   * @typedef {Object} Props\r\n   * @property {number} [size] The maximum size of each confetti piece, each piece will randomly be given a size up to this number\r\n   * @property {[number, number]} [x] The X multiplier of the distance between which the pieces will fly horizontally\r\n   * @property {[number, number]} [y] The Y multiplier of the distance between which the pieces will fly vertically\r\n   * @property {number} [duration] The total duration of the animation in milliseconds\r\n   * @property {boolean} [infinite] Whether the effect should loop infinitely\r\n   * @property {[number, number]} [delay] Range of random delay between two values, in milliseconds, which will be randomly given to each piece\r\n   * @property {[number, number]} [colorRange] Hue color range between which the confetti will be colored\r\n   * @property {string[]} [colorArray] An array of colors in any valid CSS value, colors will be asigned to each piece randomly from this array\r\n   * @property {number} [amount] The amount of confetti pieces in total, high numbers might lead to performance issues\r\n   * @property {number | \"infinite\" | \"initial\" | \"inherit\"} [iterationCount] The number of times the animation will fire, allows any value valid for the css prop `animation-iteration-count`\r\n   * @property {string} [fallDistance] The distance elements fall, represented as a css value such as \"10px\" or \"5rem\"\r\n   * @property {boolean} [rounded] Whether the confetti pieces should have rounded edges\r\n   * @property {boolean} [cone] Whether the effect should be shaped like a cone, rather than more box-shaped\r\n   * @property {boolean} [noGravity] Whether gravity should be disabled for the effect\r\n   * @property {number} [xSpread] The horizontal spread of the effect as it falls down, from 0 to 1\r\n   * @property {boolean} [destroyOnComplete] Whether to destroy the elements after the animation is complete\r\n   * @property {boolean} [disableForReducedMotion] Disable the effect if reduced motion is enabled\r\n   */\r\n\r\n  /** @type {Props} */\r\n  const {\r\n    size = 10,\r\n    x = [-0.5, 0.5],\r\n    y = [0.25, 1],\r\n    duration = 2000,\r\n    infinite = false,\r\n    delay = [0, 50],\r\n    colorRange = [0, 360],\r\n    colorArray = [],\r\n    amount = 50,\r\n    iterationCount = 1,\r\n    fallDistance = \"100px\",\r\n    rounded = false,\r\n    cone = false,\r\n    noGravity = false,\r\n    xSpread = 0.15,\r\n    destroyOnComplete = true,\r\n    disableForReducedMotion = false\r\n  } = $props()\r\n\r\n  let complete = $state(false)\r\n\r\n  onMount(() => {\r\n    if (!destroyOnComplete || infinite || typeof iterationCount === \"string\") return\r\n\r\n    setTimeout(() => complete = true, (duration + delay[1]) * iterationCount)\r\n  })\r\n\r\n  /**\r\n\t * @param {number} min\r\n\t * @param {number} max\r\n   * @returns {number}\r\n\t */\r\n  function randomBetween(min, max) {\r\n    return Math.random() * (max - min) + min\r\n  }\r\n\r\n  /** @returns {string} */\r\n  function getColor() {\r\n    if (colorArray.length) return colorArray[Math.round(Math.random() * (colorArray.length - 1))]\r\n    else return `hsl(${Math.round(randomBetween(colorRange[0], colorRange[1]))}, 75%, 50%)`\r\n  }\r\n</script>\r\n\r\n{#if !complete}\r\n  <div\r\n    class=\"confetti-holder\"\r\n    class:rounded\r\n    class:cone\r\n    class:no-gravity={noGravity}\r\n    class:reduced-motion={disableForReducedMotion}\r\n    style=\"\r\n    --fall-distance: {fallDistance};\r\n    --size: {size}px;\r\n    --x-spread: {(1 - xSpread)};\r\n    --transition-iteration-count: {infinite ? \"infinite\" : iterationCount};\">\r\n    {#each { length: amount } as _}\r\n      <div\r\n        class=\"confetti\"\r\n        style=\"\r\n        --color: {getColor()};\r\n        --skew: {randomBetween(-45, 45)}deg,{randomBetween(-45, 45)}deg;\r\n        --rotation-xyz: {randomBetween(-10, 10)}, {randomBetween(-10, 10)}, {randomBetween(-10, 10)};\r\n        --rotation-deg: {randomBetween(0, 360)}deg;\r\n        --translate-y-multiplier: {randomBetween(y[0], y[1])};\r\n        --translate-x-multiplier: {randomBetween(x[0], x[1])};\r\n        --scale: {0.1 * randomBetween(2, 10)};\r\n        --transition-delay: {randomBetween(delay[0], delay[1])}ms;\r\n        --transition-duration: {infinite ? `calc(${duration}ms * var(--scale))` : `${duration}ms`};\"></div>\r\n    {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .confetti-holder {\r\n    position: relative;\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: skew(var(--skew)) rotate3d(var(--full-rotation));\r\n    }\r\n\r\n    100% {\r\n      transform: skew(var(--skew)) rotate3d(var(--rotation-xyz), calc(var(--rotation-deg) + 360deg));\r\n    }\r\n  }\r\n\r\n  @keyframes translate {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n\r\n    8% {\r\n      transform: translateY(calc(var(--translate-y) * 0.95)) translateX(calc(var(--translate-x) * (var(--x-spread) * 0.9)));\r\n      opacity: 1;\r\n    }\r\n\r\n    12% {\r\n      transform: translateY(var(--translate-y)) translateX(calc(var(--translate-x) * (var(--x-spread) * 0.95)));\r\n      opacity: 1;\r\n    }\r\n\r\n    16% {\r\n      transform: translateY(var(--translate-y)) translateX(calc(var(--translate-x) * var(--x-spread)));\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      transform: translateY(calc(var(--translate-y) + var(--fall-distance))) translateX(var(--translate-x));\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  @keyframes no-gravity-translate {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      transform: translateY(var(--translate-y)) translateX(var(--translate-x));\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .confetti {\r\n    --translate-y: calc(-200px * var(--translate-y-multiplier));\r\n    --translate-x: calc(200px * var(--translate-x-multiplier));\r\n    position: absolute;\r\n    height: calc(var(--size) * var(--scale));\r\n    width: calc(var(--size) * var(--scale));\r\n    animation: translate var(--transition-duration) var(--transition-delay) var(--transition-iteration-count) linear;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .confetti::before {\r\n    --full-rotation: var(--rotation-xyz), var(--rotation-deg);\r\n    content: '';\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: var(--color);\r\n    background-size: contain;\r\n    transform: skew(var(--skew)) rotate3d(var(--full-rotation));\r\n    animation: rotate var(--transition-duration) var(--transition-delay) var(--transition-iteration-count) linear;\r\n  }\r\n\r\n  .rounded .confetti::before {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .cone .confetti {\r\n    --translate-x: calc(200px * var(--translate-y-multiplier) * var(--translate-x-multiplier));\r\n  }\r\n\r\n  .no-gravity .confetti {\r\n    animation-name: no-gravity-translate;\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  @media (prefers-reduced-motion) {\r\n    .reduced-motion .confetti,\r\n    .reduced-motion .confetti::before {\r\n      animation: none;\r\n    }\r\n  }\r\n</style>\r\n", "import Confetti from \"./Confetti.svelte\"\n\nexport { Confetti }\nexport default Confetti\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAA;;;;QA0BI,OAAI,KAAA,SAAA,QAAA,GAAG,EAAE,GACT,IAAC,KAAA,SAAA,KAAA,IAAA,MAAA,CAAA,MAAU,GAAG,CAAA,GACd,IAAC,KAAA,SAAA,KAAA,IAAA,MAAA,CAAI,MAAM,CAAC,CAAA,GACZ,WAAQ,KAAA,SAAA,YAAA,GAAG,GAAI,GACf,WAAQ,KAAA,SAAA,YAAA,GAAG,KAAK,GAChB,QAAK,KAAA,SAAA,SAAA,IAAA,MAAA,CAAI,GAAG,EAAE,CAAA,GACd,aAAU,KAAA,SAAA,cAAA,IAAA,MAAA,CAAI,GAAG,GAAG,CAAA,GACpB,aAAU,KAAA,SAAA,cAAA,IAAA,MAAA,CAAA,CAAA,GACV,SAAM,KAAA,SAAA,UAAA,GAAG,EAAE,GACX,iBAAc,KAAA,SAAA,kBAAA,GAAG,CAAC,GAClB,eAAY,KAAA,SAAA,gBAAA,GAAG,OAAO,GACtB,UAAO,KAAA,SAAA,WAAA,GAAG,KAAK,GACf,OAAI,KAAA,SAAA,QAAA,GAAG,KAAK,GACZ,YAAS,KAAA,SAAA,aAAA,GAAG,KAAK,GACjB,UAAO,KAAA,SAAA,WAAA,GAAG,IAAI,GACd,oBAAiB,KAAA,SAAA,qBAAA,GAAG,IAAI,GACxB,0BAAuB,KAAA,SAAA,2BAAA,GAAG,KAAK;MAG7B,WAAQ,IAAA,MAAU,KAAK,GAAA,UAAA;AAE3B,UAAO,MAAO;SACP,kBAAiB,KAAI,SAAQ,KAAA,cAAA,OAAW,eAAc,GAAK,QAAQ,EAAA;AAExE,eAAU,MAAA,IAAO,UAAW,IAAI,IAAG,SAAQ,IAAG,MAAK,EAAC,CAAC,KAAK,eAAc,CAAA;EAC1E,CAAC;WAOQ,cAAc,KAAK,KAAK;WACxB,KAAK,OAAM,KAAM,MAAM,OAAO;EACvC;WAGS,WAAW;QACd,WAAU,EAAC,OAAM,QAAS,WAAU,EAAC,KAAK,MAAM,KAAK,OAAM,KAAM,WAAU,EAAC,SAAS,EAAC,CAAA;QAAA,QAAA,OACvE,KAAK,MAAM,cAAc,WAAU,EAAC,CAAC,GAAG,WAAU,EAAC,CAAC,CAAA,CAAA,CAAA;EACzE;;;;;;;;qCAeW,QAAQ,OAAM,EAAA,IAAA,OAAA,CAAAA,WAAM,MAAC;;;;;;;;;;;;iCAYF,SAAQ,YAAW,SAAQ,CAAA,0BAA0B,SAAQ,CAAA,IAAA,GAAA;;cAR3E;oBACD,cAAa,KAAM,EAAE;oBAAO,cAAa,KAAM,EAAE;oBACzC,cAAa,KAAM,EAAE;oBAAK,cAAa,KAAM,EAAE;oBAAK,cAAa,KAAM,EAAE;oBACzE,cAAc,GAAG,GAAG;oBACV,cAAc,EAAC,EAAC,CAAC,GAAG,EAAC,EAAC,CAAC,CAAA;oBACvB,cAAc,EAAC,EAAC,CAAC,GAAG,EAAC,EAAC,CAAC,CAAA;oBACxC,MAAM,cAAc,GAAG,EAAE;oBACd,cAAc,MAAK,EAAC,CAAC,GAAG,MAAK,EAAC,CAAC,CAAA;;;;;;;;;;;;;;;uBAftC,aAAY,KAAA,EAAA;cACrB,KAAI,KAAA,EAAA;kBACC,IAAI,QAAO,CAAA;qCACM,SAAQ,IAAG,aAAa,eAAc,MAAA,EAAA,GAAA;;;;;;0BANnD,UAAS;8BACL,wBAAuB;;;;;;;;iBAN3C,QAAQ,EAAA,UAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;AClEd,IAAO,eAAQ;",
  "names": ["$$anchor"]
}
